openapi: 3.0.0
info:
    title: Product API
    description: API for product management (CRUD operations, apply/remove discounts)
    version: 1.0.0
    contact:
        name: NexSphereShop-API
        email: support@nexsphereshop.com

tags:
    - name: Products
      description: Endpoints related to product management

paths:
    /api/products:
        post:
            tags:
                - Products
            summary: Create a new product
            requestBody:
                description: Product creation data
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductCreate'
            responses:
                201:
                    description: Product successfully created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    data:
                                        $ref: '#/components/schemas/ProductResponse'
                400:
                    description: Bad Request - Invalid input
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: error
                                    message:
                                        type: string
                                        example: Invalid product data
            examples:
                application/json:
                    value:
                        name: 'Cool T-Shirt'
                        description: 'A cool t-shirt for summer.'
                        price: 29.99
                        totalQuantity: 100
                        discount: 10
                        sizes: ['S', 'M', 'L']
                        colors: ['Red', 'Blue']
                        lowStockThreshold: 10
                        status: 'active'

        get:
            tags:
                - Products
            summary: Get all products
            responses:
                200:
                    description: List of products retrieved
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ProductResponse'
            examples:
                application/json:
                    value:
                        status: 'success'
                        data:
                            - id: '1'
                              name: 'Cool T-Shirt'
                              description: 'A cool t-shirt for summer.'
                              price: 29.99
                              totalQuantity: 100
                              discount: 10
                              sizes: ['S', 'M']
                              colors: ['Red', 'Blue']
                              lowStockThreshold: 10
                              status: 'active'
                            - id: '2'
                              name: 'Stylish Hat'
                              description: 'A stylish hat for sunny days.'
                              price: 19.99
                              totalQuantity: 50
                              discount: 0
                              sizes: ['M', 'L']
                              colors: ['Black', 'White']
                              lowStockThreshold: 5
                              status: 'active'

    /api/products/{productId}:
        get:
            tags:
                - Products
            summary: Get a product by ID
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
                  description: ID of the product to retrieve
            responses:
                200:
                    description: Product found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    data:
                                        $ref: '#/components/schemas/ProductResponse'
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: error
                                    message:
                                        type: string
                                        example: Product not found
            examples:
                application/json:
                    value:
                        status: 'success'
                        data:
                            id: '1'
                            name: 'Cool T-Shirt'
                            description: 'A cool t-shirt for summer.'
                            price: 29.99
                            totalQuantity: 100
                            discount: 10
                            sizes: ['S', 'M']
                            colors: ['Red', 'Blue']
                            lowStockThreshold: 10
                            status: 'active'

        patch:
            tags:
                - Products
            summary: Update a product's details
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
                  description: ID of the product to update
            requestBody:
                description: Data to update product details
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProductUpdate'
            responses:
                200:
                    description: Product successfully updated
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    data:
                                        $ref: '#/components/schemas/ProductResponse'
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: error
                                    message:
                                        type: string
                                        example: Product not found
            examples:
                application/json:
                    value:
                        name: 'Updated Cool T-Shirt'
                        description: 'An updated description for the cool t-shirt.'
                        price: 24.99
                        totalQuantity: 80
                        discount: 5
                        sizes: ['M', 'L']
                        colors: ['Green', 'Blue']
                        lowStockThreshold: 10
                        status: 'active'

        delete:
            tags:
                - Products
            summary: Delete a product by ID
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
                  description: ID of the product to delete
            responses:
                204:
                    description: Product successfully deleted
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: error
                                    message:
                                        type: string
                                        example: Product not found
            examples:
                application/json:
                    value:
                        status: 'success'
                        message: 'Product successfully deleted.'

    /api/products/{productId}/discount:
        patch:
            tags:
                - Products
            summary: Apply a discount to a product
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
                  description: ID of the product to apply the discount
            requestBody:
                description: Discount data
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                discount:
                                    type: number
                                    example: 20
                                    description: Discount percentage to apply
                            required:
                                - discount
            responses:
                200:
                    description: Discount successfully applied
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    data:
                                        $ref: '#/components/schemas/ProductResponse'
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: error
                                    message:
                                        type: string
                                        example: Product not found
            examples:
                application/json:
                    value:
                        discount: 20

    /api/products/{productId}/discount/remove:
        patch:
            tags:
                - Products
            summary: Remove a discount from a product
            parameters:
                - in: path
                  name: productId
                  required: true
                  schema:
                      type: string
                  description: ID of the product to remove the discount
            responses:
                200:
                    description: Discount successfully removed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: success
                                    data:
                                        $ref: '#/components/schemas/ProductResponse'
                404:
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: error
                                    message:
                                        type: string
                                        example: Product not found
            examples:
                application/json:
                    value:
                        status: 'success'
                        message: 'Discount successfully removed.'

components:
    schemas:
        ProductCreate:
            type: object
            properties:
                name:
                    type: string
                    example: Product Name
                    description: Name of the product
                description:
                    type: string
                    example: A brief description of the product.
                    description: Description of the product
                price:
                    type: number
                    example: 99.99
                    description: Price of the product
                totalQuantity:
                    type: integer
                    example: 100
                    description: Quantity of the product in stock
                discount:
                    type: number
                    example: 0
                    description: Initial discount percentage
                sizes:
                    type: array
                    items:
                        type: string
                        enum: [S, M, L, XL, XXL]
                colors:
                    type: array
                    items:
                        type: string
                lowStockThreshold:
                    type: integer
                    example: 10
                    description: Threshold for low stock notifications
                status:
                    type: string
                    enum: [active, inactive]
                    example: active
                    description: Product status

        ProductUpdate:
            type: object
            properties:
                name:
                    type: string
                    example: Updated Product Name
                description:
                    type: string
                    example: Updated description of the product.
                price:
                    type: number
                    example: 89.99
                totalQuantity:
                    type: integer
                    example: 80
                discount:
                    type: number
                    example: 10
                sizes:
                    type: array
                    items:
                        type: string
                colors:
                    type: array
                    items:
                        type: string
                lowStockThreshold:
                    type: integer
                    example: 5
                status:
                    type: string
                    enum: [active, inactive]
                    example: active

        ProductResponse:
            type: object
            properties:
                id:
                    type: string
                    example: 1
                name:
                    type: string
                    example: Cool T-Shirt
                description:
                    type: string
                    example: A cool t-shirt for summer.
                price:
                    type: number
                    example: 29.99
                totalQuantity:
                    type: integer
                    example: 100
                discount:
                    type: number
                    example: 10
                sizes:
                    type: array
                    items:
                        type: string
                colors:
                    type: array
                    items:
                        type: string
                lowStockThreshold:
                    type: integer
                    example: 10
                status:
                    type: string
                    example: active
